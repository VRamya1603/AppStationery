// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppStationery.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.0");

            modelBuilder.Entity("AppStationery.Model.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ApplicationUser");
                });

            modelBuilder.Entity("AppStationery.Model.Branch", b =>
                {
                    b.Property<int>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BranchName")
                        .HasColumnType("TEXT");

                    b.HasKey("BranchId");

                    b.ToTable("Branch");
                });

            modelBuilder.Entity("AppStationery.Model.PrintingStationery", b =>
                {
                    b.Property<int>("PrintingStationeryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comments")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsContinuos")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsNumbered")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsWithCarbon")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("NoOfCopies")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("NoOfPagesInOneBook")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TenantId")
                        .HasColumnType("TEXT");

                    b.HasKey("PrintingStationeryId");

                    b.ToTable("PrintingStationery");
                });

            modelBuilder.Entity("AppStationery.Model.StationeryQuote", b =>
                {
                    b.Property<int>("StationeryQuoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ApprovalState")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ApprovedById")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ApprovedOn")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ApprovedPerBookPrice")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ApprovedPerCopyPrice")
                        .HasColumnType("TEXT");

                    b.Property<int?>("BranchId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comments")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("MinmumOrderQuantity")
                        .HasColumnType("TEXT");

                    b.Property<int>("PrintingStationeryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("QuoteNo")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("QuotePerBookPrice")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("QuotePerCopyPrice")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("QuotedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReferenceNo")
                        .HasColumnType("TEXT");

                    b.Property<string>("TenantId")
                        .HasColumnType("TEXT");

                    b.HasKey("StationeryQuoteId");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("BranchId");

                    b.HasIndex("PrintingStationeryId");

                    b.ToTable("StationeryQuote");
                });

            modelBuilder.Entity("AppStationery.Model.StationeryQuote", b =>
                {
                    b.HasOne("AppStationery.Model.ApplicationUser", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("AppStationery.Model.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("AppStationery.Model.PrintingStationery", "PrintingStationery")
                        .WithMany()
                        .HasForeignKey("PrintingStationeryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApprovedBy");

                    b.Navigation("Branch");

                    b.Navigation("PrintingStationery");
                });
#pragma warning restore 612, 618
        }
    }
}
